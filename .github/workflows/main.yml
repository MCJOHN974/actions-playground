# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.


  check-diff:
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Save PR version of state.csv
        run: mv state.csv state-pr.csv

      - name: Checkout main branch without switching directory
        uses: actions/checkout@v2
        with:
          ref: main
          path: main_repo
          fetch-depth: 0

      - name: Get main branch version of state.csv
        run: cp main_repo/state.csv state-main.csv

      # Wait for all 'status' checks to complete
      - name: Wait for CI
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-ci
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: build # Replace with your CI job names
          ref: ${{ github.event.pull_request.head.sha }}

      # Ensure all checks are successful
      - name: Verify CI success
        run: |
          if [ "${{ steps.wait-for-ci.outputs.conclusion }}" != "success" ]; then
            echo "CI checks failed"
            exit 1
          fi

      # Compare state.csv in PR and main branch, and post comment
      - name: Compare state.csv and Post Comment
        run: |
          # Diff between state.csv in main and in PR
          DIFF=$(diff -u state-main.csv state-pr.csv) || true

          # Posting the diff as a comment
          echo "$DIFF" | gh pr comment ${{ github.event.pull_request.number }} --body "Diff between \`state.csv\` in main and PR:\n\`\`\`\n$DIFF\n\`\`\`"